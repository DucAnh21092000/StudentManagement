/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Sevice;

import Entity.Student;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dell
 */
public class searchDisplay extends javax.swing.JFrame {

    /**
     * Creates new form searchDisplay
     */
    private static ArrayList<Student> studentList = new ArrayList<>();
    private static ArrayList<Student> searchResult = new ArrayList<>();
    
    
    public searchDisplay() {
        initComponents();
        this.setResizable(false);
        this.setVisible(true);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbSearchResult = new javax.swing.JTable();
        jbtnDisplayList = new javax.swing.JButton();
        jbtnClearTable = new javax.swing.JButton();
        jtfSearchBox = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jbtnSearchButton = new javax.swing.JButton();
        jbtnReturnMainMenu = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jcbName = new javax.swing.JCheckBox();
        jcbAcademicYear = new javax.swing.JCheckBox();
        jcbMayjor = new javax.swing.JCheckBox();
        jcbHomeTown = new javax.swing.JCheckBox();
        jcbID = new javax.swing.JCheckBox();
        jcbPhoneNumber = new javax.swing.JCheckBox();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jtbSearchResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Ten", "Ngay sinh", "Que quan", "Khoa", "ID", "CPA", "Chuyen nganh", "Mail", "So dien thoai"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Float.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtbSearchResult);
        if (jtbSearchResult.getColumnModel().getColumnCount() > 0) {
            jtbSearchResult.getColumnModel().getColumn(0).setResizable(false);
            jtbSearchResult.getColumnModel().getColumn(1).setResizable(false);
            jtbSearchResult.getColumnModel().getColumn(2).setResizable(false);
            jtbSearchResult.getColumnModel().getColumn(3).setResizable(false);
            jtbSearchResult.getColumnModel().getColumn(4).setResizable(false);
            jtbSearchResult.getColumnModel().getColumn(5).setResizable(false);
            jtbSearchResult.getColumnModel().getColumn(6).setResizable(false);
            jtbSearchResult.getColumnModel().getColumn(7).setResizable(false);
            jtbSearchResult.getColumnModel().getColumn(8).setResizable(false);
        }

        jbtnDisplayList.setText("Lam moi danh sach");
        jbtnDisplayList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDisplayListActionPerformed(evt);
            }
        });

        jbtnClearTable.setText("Xoa toan bo danh sach");
        jbtnClearTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnClearTableActionPerformed(evt);
            }
        });

        jtfSearchBox.setText("Nhap thong tin sinh vien...");

        jLabel1.setText("Tim kiem sinh vien, nhap thong tin: ");

        jbtnSearchButton.setText("Tim kiem");
        jbtnSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSearchButtonActionPerformed(evt);
            }
        });

        jbtnReturnMainMenu.setText("Quay lai man hinh chinh.");
        jbtnReturnMainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnReturnMainMenuActionPerformed(evt);
            }
        });

        jLabel3.setText("Sap xep sinh vien, chon 1 tieu chi:");

        buttonGroup1.add(jcbName);
        jcbName.setText("Theo ten");

        buttonGroup1.add(jcbAcademicYear);
        jcbAcademicYear.setText("Khoa");

        buttonGroup1.add(jcbMayjor);
        jcbMayjor.setText("Chuyen nganh");

        buttonGroup1.add(jcbHomeTown);
        jcbHomeTown.setText("Que quan");

        buttonGroup1.add(jcbID);
        jcbID.setText("ID");

        buttonGroup1.add(jcbPhoneNumber);
        jcbPhoneNumber.setText("So dien thoai");

        jButton7.setText("Tang dan");

        jButton8.setText("Giam dan");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jbtnDisplayList, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                                    .addComponent(jtfSearchBox)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jbtnClearTable, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbtnSearchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jcbName)
                                            .addComponent(jcbHomeTown))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jcbAcademicYear)
                                            .addComponent(jcbID))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jcbMayjor)
                                            .addComponent(jcbPhoneNumber))))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 381, Short.MAX_VALUE)
                                .addComponent(jbtnReturnMainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3)
                            .addComponent(jbtnReturnMainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfSearchBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbName)
                            .addComponent(jcbAcademicYear)
                            .addComponent(jcbMayjor)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbtnDisplayList, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jcbPhoneNumber)
                            .addComponent(jcbID)
                            .addComponent(jcbHomeTown))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton7)
                            .addComponent(jButton8)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jbtnClearTable, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                        .addComponent(jbtnSearchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnReturnMainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnReturnMainMenuActionPerformed
        // TODO add your handling code here:
        MenuDisplay menu = new MenuDisplay();
    }//GEN-LAST:event_jbtnReturnMainMenuActionPerformed

    private void jbtnDisplayListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDisplayListActionPerformed
        // TODO add your handling code here:
        getList();
        showData(studentList);
    }//GEN-LAST:event_jbtnDisplayListActionPerformed
    private void jbtnClearTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnClearTableActionPerformed
        // TODO add your handling code here:
        Object[] columns = {"Ho ten","Ngay sinh", "Que quan", "Khoa", "ID", "CPA", "Chuyen nganh", "Mail", "So dien thoai"};
        jtbSearchResult.setModel(new DefaultTableModel(null, columns));
    }//GEN-LAST:event_jbtnClearTableActionPerformed

    private void jbtnSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSearchButtonActionPerformed
        // TODO add your handling code here:
        String keyword = jtfSearchBox.getText();
        searchData();
        showData(searchResult);
    }//GEN-LAST:event_jbtnSearchButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(searchDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(searchDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(searchDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(searchDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new searchDisplay().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnClearTable;
    private javax.swing.JButton jbtnDisplayList;
    private javax.swing.JButton jbtnReturnMainMenu;
    private javax.swing.JButton jbtnSearchButton;
    private javax.swing.JCheckBox jcbAcademicYear;
    private javax.swing.JCheckBox jcbHomeTown;
    private javax.swing.JCheckBox jcbID;
    private javax.swing.JCheckBox jcbMayjor;
    private javax.swing.JCheckBox jcbName;
    private javax.swing.JCheckBox jcbPhoneNumber;
    private javax.swing.JTable jtbSearchResult;
    private javax.swing.JTextField jtfSearchBox;
    // End of variables declaration//GEN-END:variables
    
    // Lay danh sach tu DataBase
    private ArrayList<Student> getList(){
        studentList.clear();
        Statement statement = null;
        try{
        Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  // load the driver
        Connection connection = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Students;user=sa;password=123123;");
        System.out.println("Connected to database !");
        statement = connection.createStatement();
        String sql = "select * from Students.dbo.Students_Table;";
        statement.execute(sql);
        ResultSet resultSet = statement.executeQuery(sql);
        while(resultSet.next()){
            Student thisStudent = new Student(
                    resultSet.getString(1),
                    resultSet.getString(2),
                    resultSet.getString(3),
                    resultSet.getInt(4),
                    resultSet.getInt(5),
                    resultSet.getFloat(6),
                    resultSet.getString(7),
                    resultSet.getString(8),
                    resultSet.getString(9)
            );
            studentList.add(thisStudent);
            }
        }
        catch(SQLException sqle) {}
        catch(ClassNotFoundException e) {}
        return studentList;
    }
    
    //Show data
    private void showData(ArrayList<Student> list){
        int size = list.size();        
        Object[] columns = {"Ho ten","Ngay sinh", "Que quan", "Khoa", "ID", "CPA", "Chuyen nganh", "Mail", "So dien thoai"};
        DefaultTableModel model = new DefaultTableModel(columns, 0);
        for(int i = 0; i < size; i++){
            Object[] row = {list.get(i).getStudentName(),
                            list.get(i).getDateOfBirth(),
                            list.get(i).getHomeTown(),
                            list.get(i).getAcademicYear(),
                            list.get(i).getStudentId(),
                            list.get(i).getCPA(),
                            list.get(i).getMayjor(),
                            list.get(i).getMail(),
                            list.get(i).getPhoneNumber()};
            model.addRow(row);
        }
        jtbSearchResult.setModel(model);
    }
    
    private ArrayList<Student> searchData(){
        String keyword = jtfSearchBox.getText();
        getList();
        searchResult.clear();
        for(int i = 0; i < studentList.size(); i++){
            if(String.valueOf(studentList.get(i).getAcademicYear()).equals(keyword)
                    || String.valueOf(studentList.get(i).getCPA()).equals(keyword)
                    || studentList.get(i).getMayjor().equals(keyword)
                    || studentList.get(i).getMail().equals(keyword)
                    || String.valueOf(studentList.get(i).getStudentId()).equals(keyword)
                    || studentList.get(i).getPhoneNumber().equals(keyword)
                    || studentList.get(i).getHomeTown().equals(keyword)
                    || studentList.get(i).getStudentName().equals(keyword)
                    || studentList.get(i).getDateOfBirth().equals(keyword)){
                Student thisStudent = new Student(studentList.get(i).getStudentName(),
                    studentList.get(i).getDateOfBirth(),
                    studentList.get(i).getHomeTown(),
                    studentList.get(i).getAcademicYear(),
                    studentList.get(i).getStudentId(),
                    studentList.get(i).getCPA(),
                    studentList.get(i).getMayjor(),
                    studentList.get(i).getMail(),
                    studentList.get(i).getPhoneNumber());
                searchResult.add(thisStudent);
            }
        }
        return searchResult;
    }
    
    //Update
    //Update 1: Clear list after every time get new list
}
